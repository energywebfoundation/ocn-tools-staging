name: Docker Image CI

on:
  push:
    branches: [ master ]
    
env:
  ECR_REPOSITORY: ew-elia
  AWS_REPOSITORY_URL: "${{ secrets.AWS_ACCOUNT_ID_STAGING }}..dkr.ecr.eu-central-1.amazonaws.com/$ECR_REPOSITORY"

jobs:
  
  build:

    runs-on: ubuntu-latest

    steps:

    - name: Checkout
      uses: actions/checkout@v2
      
    - name: Choose proper config
      run: cp src/config/config.local.ts src/config/config.ts
    
    - name: Get the tag version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}
      
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      
    - name: Build & push docker images
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ steps.date.outputs.date }}
      run: |
        docker build -f Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    
    - name: Logout of Amazon ECR
      if: always()
      run: docker logout ${{ steps.login-ecr.outputs.registry }}

  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Deploy to elia_staging
      uses: peterkimzz/aws-ssm-send-command@master
      id: ssm
      with:
        aws-region: eu-central-1
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        instance-ids: ${{ secrets.INSTANCE_ID }}

        working-directory: /home/ubuntu/docker-stack/
        command: ls -la
        command: echo $USER
        
        #Setup aws Credentials/Variables
        command: export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
        command: export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
        command: export AWS_DEFAULT_REGION=eu-central-1
        command: export TAG=$IMAGE_TAG
        command: export CPO_PRIVATE_KEY=${{ secrets.CPO_PRIVATE_KEY }}
        command: export CPO_TOKEN_A=${{ secrets.CPO_TOKEN_A }}
        command: export AWS_REPOSITORY_URL=$AWS_REPOSITORY_URL

        #login to docker (AWS)
        command: aws ecr get-login --no-include-email --region eu-central-1 | bash

        #create nginx certificates and key
        command: echo ${{ secrets.NGINX_CERTIFICATE }} > ./${{ github.event.repository.name }}/devops/nginx/origin.crt
        command: echo ${{ secrets.NGINX_KEY }} > ./${{ github.event.repository.name }}/devops/nginx/origin.key

        #Copy config files
        command: mv ./${{ github.event.repository.name }}/devops/nginx .
        command: mv ./${{ github.event.repository.name }}/devops/docker-compose/docker-compose.yml .

    # Catch SSM outputs
    - name: Get the outputs
      run: echo "The Command id is ${{ steps.ssm.outputs.command-id }}"
      
